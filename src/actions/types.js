export default {
  user: {
    login: 'USER.LOGIN',
    changeInstrument: 'USER.CHANGE_INSTRUMENT',
    placeOrder: 'USER.PLACE_ORDER',
    cancelOrder: 'USER.CANCEL_ORDER',
    changePasswordWithCode: 'USER.CHANGE_PASSWORD_WITH_CODE',
    logout: 'USER.LOGOUT',
    signup: 'USER.SIGNUP',
    resendVerification: 'USER.RESEND_VERIFICATION',
    makeDeposit: 'USER.MAKE_DEPOSIT',
    makeWithdrawal: 'USER.MAKE_WITHDRAWAL',
    updateSettings: 'USER.UPDATE_SETTINGS',
    getSecretCode: 'USER.GET_SECRET_CODE',
    recreateSecretCode: 'USER.RECREATE_SECRET_CODE',
    uploadFiles: 'USER.UPLOAD_FILES',
    passwordResetRequest: 'USER.PASSWORD_RESET_REQUEST',
    passwordResetCommit: 'USER.PASSWORD_RESET_COMMIT',
    newPassword: 'USER.NEW_PASSWORD',
    setFxBlueChartTimeFrame: 'USER.SET_FX_BLUE_CHART_TIMEFRAME',
    selectedFxBlueChartTimeFrame: 'USER.SELECTED_FX_BLUE_CHART_TIMEFRAME',
    loadSelectedFxBlueChartTimeFrame: 'USER.LOAD_SELECTED_FX_BLUE_CHART_TIMEFRAME',
    defaultUploadFile: 'USER.DEFAULT_UPLOAD_FILE',
  },
  state: {
    setInstrument: 'STATE.SET_INSTRUMENT',
    setInstruments: 'STATE.SET_INSTRUMENTS',
    setTrades: 'STATE.SET_TRADES',
    setProducts: 'STATE.SET_PRODUCTS',
    refreshTickers: 'STATE.REFRESH_TICKERS', // TODO: do we need this or just updateTickers?
    updateTickers: 'STATE.UPDATE_TICKERS',
    refreshBook: 'STATE.REFRESH_BOOK',
    updateBook: 'STATE.UPDATE_BOOK',
    authPending: 'STATE.AUTH_PENDING',
    authSuccess: 'STATE.AUTH_SUCCESS',
    authFailed: 'STATE.AUTH_FAILED',
    authNone: 'STATE.AUTH_NONE',
    updateOrder: 'STATE.UPDATE_ORDER',
    refreshOrderEvents: 'STATE.REFRESH_ORDER_EVENTS',
    newOrderEvents: 'STATE.NEW_ORDER_EVENTS',
    setAccounts: 'STATE.SET_ACCOUNTS',
    updateBalances: 'STATE.UPDATE_BALANCES',
    setLocation: 'STATE.SET_LOCATION',
    setLocationError: 'STATE.SET_LOCATION_ERROR',
    setOrderPending: 'STATE.SET_ORDER_PENDING',
    setOrderAccepted: 'STATE.SET_ORDER_ACCEPTED',
    setOrderRejected: 'STATE.SET_ORDER_REJECTED',
    cancelOrderSuccess: 'STATE.CANCEL_ORDER_SUCCESS',
    cancelOrderError: 'STATE.CANCEL_ORDER_ERROR',
    minimalSchemaPending: 'STATE.MINIMAL_SCHEMA_PENDING',
    minimalSchemaSuccess: 'STATE.MINIMAL_SCHEMA_SUCCESS',
    minimalSchemaError: 'STATE.MINIMAL_SCHEMA_ERROR',
    extendedSchemaPending: 'STATE.EXTENDED_SCHEMA_PENDING',
    extendedSchemaSuccess: 'STATE.EXTENDED_SCHEMA_SUCCESS',
    extendedSchemaError: 'STATE.EXTENDED_SCHEMA_ERROR',
    signupPending: 'STATE.SIGNUP_PENDING',
    signupSuccess: 'STATE.SIGNUP_SUCCESS',
    signupError: 'STATE.SIGNUP_ERROR',
    signupNone: 'STATE.SIGNUP_NONE',
    signupNextStep: 'STATE.SIGNUP_NEXT_STEP',
    setResendVerificationStatus: 'STATE.SET_RESEND_VERIFICATION_STATUS',
    depositRequestPending: 'STATE.DEPOSIT_REQUEST_PENDING',
    depositRequestFailed: 'STATE.DEPOSIT_REQUEST_FAILED',
    setDepositStatus: 'STATE.SET_DEPOSIT_STATUS',
    withdrawalRequestPending: 'STATE.WITHDRAWAL_REQUEST_PENDING',
    withdrawalRequestFailed: 'STATE.WITHDRAWAL_REQUEST_FAILED',
    setWithdrawalStatus: 'STATE.SET_WITHDRAWAL_STATUS',
    setUserSettingsPending: 'STATE.SET_USER_SETTINGS_PENDING',
    setUserSettings: 'STATE.SET_USER_SETTINGS',
    setUserSettingsError: 'STATE.SET_USER_SETTINGS_ERROR',
    setUpdateSettingsPending: 'STATE.SET_UPDATE_SETTINGS_PENDING',
    setUpdateSettingsAccepted: 'STATE.SET_UDPATE_SETTINGS_ACCEPTED',
    setUpdateSettingsError: 'STATE.SET_UPDATE_SETTINGS_ERROR',
    setSecretCodePending: 'STATE.SET_SECRET_CODE_PENDING',
    setSecretCode: 'STATE.SET_SECRET_CODE',
    setSecretCodeError: 'STATE.SET_SECRET_CODE_ERROR',
    resetSecretCodePending: 'STATE.RESET_SECRET_CODE_PENDING',
    resetSecretCode: 'STATE.RESET_SECRET_CODE',
    resetSecretCodeError: 'STATE.RESET_SECRET_CODE_ERROR',
    fileUploadPending: 'STATE.FILE_UPLOAD_PENDING',
    fileUploadSuccess: 'STATE.FILE_UPLOAD_SUCCESS',
    fileUploadFailed: 'STATE.FILE_UPLOAD_FAILED',
    kycStatusPending: 'STATE.KYC_STATUS_PENDING',
    kycStatusSuccess: 'STATE.KYC_STATUS_SUCCESS',
    kycStatusFailed: 'STATE.KYC_STATUS_FAILED',
    kycRequestPending: 'STATE.KYC_REQUEST_PENDING',
    kycRequestSuccess: 'STATE.KYC_REQUEST_SUCCESS',
    kycRequestFailed: 'STATE.KYC_REQUEST_FAILED',
    userProfilePending: 'STATE.USER_PROFILE_PENDING',
    userProfileSuccess: 'STATE.USER_PROFILE_SUCCESS',
    userProfileFailed: 'STATE.USER_PROFILE_FAILED',
    updateProfilePending: 'STATE.UPDATE_PROFILE_PENDING',
    updateProfileSuccess: 'STATE.UPDATE_PROFILE_SUCCESS',
    updateProfileFailed: 'STATE.UPDATE_PROFILE_FAILED',
    transactionsPending: 'STATE.TRANSACTIONS_PENDING',
    transactionsSuccess: 'STATE.TRANSACTIONS_SUCCESS',
    transactionsFailed: 'STATE.TRANSACTIONS_FAILED',
    completedTransactions: 'STATE.COMPLETED_TRANSACTIONS',
    completedTransactionsFailed: 'STATE.COMPLETED_TRANSACTIONS_FAILED',
    setCurrentTransaction: 'STATE.SET_CURRENT_TRANSACTION',
    passwordResetRequestPending: 'STATE.PASSWORD_RESET_REQUEST_PENDING',
    passwordResetRequestSuccess: 'STATE.PASSWORD_RESET_REQUEST_SUCCESS',
    passwordResetRequestFailed: 'STATE.PASSWORD_RESET_REQUEST_FAILED',
    passwordResetCommitPending: 'STATE.PASSWORD_RESET_COMMIT_PENDING',
    passwordResetCommitSuccess: 'STATE.PASSWORD_RESET_COMMIT_SUCCESS',
    passwordResetCommitFailed: 'STATE.PASSWORD_RESET_COMMIT_FAILED',
    newPasswordPending: 'STATE.NEW_PASSWORD_PENDING',
    newPasswordSuccess: 'STATE.NEW_PASSWORD_SUCCESS',
    newPasswordFailed: 'STATE.NEW_PASSWORD_FAILED',
    newPasswordNone: 'STATE.NEW_PASSWORD_NONE',
    changePasswordWithCodePending: 'STATE.CHANGE_PASSWORD_WITH_CODE_PENDING',
    changePasswordWithCodeSuccess: 'STATE.CHANGE_PASSWORD_WITH_CODE_SUCCESS',
    changePasswordWithCodeFailed: 'STATE.CHANGE_PASSWORD_WITH_CODE_FAILED',
    passwordResetRequestVerify: 'STATE.CHANGE_PASSWORD_WITH_CODE_VERIFY',
    verificationPending: 'STATE.VERIFICATION_PENDING',
    verificationSuccess: 'STATE.VERIFICATION_SUCCESS',
    verificationFailed: 'STATE.VERIFICATION_FAILED',
    exchangeSettingsPending: 'STATE.EXCHANGE_SETTINGS_PENDING',
    exchangeSettingsSuccess: 'STATE.EXCHANGE_SETTINGS_SUCCESS',
    exchangeSettingsFailed: 'STATE.EXCHANGE_SETTINGS_FAILED',
    defaultUploadFilePending: 'STATE.DEFAULT_UPLOAD_FILE_PENDING',
    defaultUploadFileSuccess: 'STATE.DEFAULT_UPLOAD_FILE_SUCCESS',
    defaultUploadFileFailed: 'STATE.DEFAULT_UPLOAD_FILE_FAILED',
    filePending: 'STATE.FILE_PENDING',
    fileSuccess: 'STATE.FILE_SUCCESS',
    fileFailed: 'STATE.FILE_FAILED',
    orderEventsFinished: 'STATE.ORDER_EVENTS_FINISHED',
    updateOrderEventTimeStamp: 'STATE.UPDATE_ORDER_EVENT_TIME_STAMP',
    connectingQueueAdd: 'STATE.CONNECTION_QUEUE_ADD',
    coinInfoPending: 'STATE.COIN_INFO_PENDING',
    coinInfoSuccess: 'STATE.COIN_INFO_SUCCESS',
    coinInfoFailed: 'STATE.COIN_INFO_FAILED',
    setDisplayMobile: 'STATE.SET_DISPLAY_MOBILE',
  },
  app: {
    autoConnect: 'APP.AUTO_CONNECT',
    loadTickerData: 'APP.LOAD_TICKER_DATA',
    loadInstruments: 'APP.LOAD_INSTRUMENTS',
    loadL2Data: 'APP.LOAD_L2_DATA',
    loadOrders: 'APP.LOAD_ORDERS',
    loadOrderEvents: 'APP.LOAD_ORDER_EVENTS',
    loadAccounts: 'APP.LOAD_ACCOUNTS',
    loadBalances: 'APP.LOAD_BALANCES',
    loadLocation: 'APP.LOAD_LOCATION',
    loadUserSettings: 'APP.LOAD_USER_SETTINGS',
    loadHistory: 'APP.LOAD_HISTORY',
    loadCurrentBars: 'APP.LOAD_CURRENT_BARS',
    unsubscribeCurrentBars: 'APP.UNSUBSCRIBE_CURRENT_BARS',
    getProfileSchema: 'APP.GET_PROFILE_SCHEMA',
    loadProducts: 'APP.LOAD_PRODUCTS',
    getKycStatus: 'APP.GET_KYC_STATUS',
    kycRequestStatus: 'APP.KYC_REQUEST_STATUS',
    updateKycStatus: 'APP.UPDATE_KYC_STATUS',
    getUserProfile: 'APP.GET_USER_PROFILE',
    updateUserProfile: 'APP.UPDATE_USER_PROFILE',
    loadTransactions: 'APP.LOAD_TRANSACTIONS',
    getTransactionsList: 'APP.GET_TRANSACTIONS_LIST',
    getCompletedTransactionsList: 'APP.GET_COMPLETED_TRANSACTIONS_LIST',
    verifyUser: 'APP.VERIFY_USER',
    loadExchangeSettings: 'APP.LOAD_EXCHANGE_SETTINGS',
    getFile: 'APP.GET_FILE',
    connectingQueueReconnect: 'APP.CONNECTION_QUEUE_RECONNECT',

    setTheme: 'APP.SET_THEME',
    getCoinInfo: 'APP.GET_COIN_INFO',
    /**
     * Maintenance Mode
     */
    maintenanceModeEnabled: 'APP.MAINTENANCE_MODE_ENABLED',
    maintenanceModeStatus: 'APP.MAINTENANCE_MODE_STATUS',
    maintenanceModeMsg: 'APP.MAINTENANCE_MODE_MSG',

    /**
     * Maintenance Message
     */
    maintenanceMessageEnabled: 'APP.MAINTENANCE_MESSAGE_ENABLED',
    maintenanceMessageStatus: 'APP.MAINTENANCE_MESSAGE_STATUS',
    maintenanceMessageMsg: 'APP.MAINTENANCE_MESSAGE_MSG',
  },
  error: {
    invalidInstrument: 'ERROR.INVALID_INSTRUMENT',
  },
};
